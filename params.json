{"name":"Gridform","body":"[Formidable](https://github.com/felixge/node-formidable) streams uploads to the file system by default. If you're using GridFS to store files you'll then need to turn around and copy them off of the file system. Using `gridform` removes this burden.\r\n\r\nExample:\r\n\r\n```js\r\nvar mongo = require('mongo');\r\nvar gridform = require('gridform');\r\n\r\n// assuming you've already created a db instance and opened it\r\ngridform.db = db;\r\ngridform.mongo = mongo;\r\n\r\n// in your http server\r\nvar app = http.Server(function (req, res) {\r\n\r\n  // create a gridform\r\n  var form = gridform();\r\n\r\n  // returns a custom IncomingForm\r\n  assert(form instanceof formidable.IncomingForm);\r\n\r\n  // optionally store per-file metadata\r\n  form.on('fileBegin', function (name, file) {\r\n    file.metadata = 'so meta'\r\n  })\r\n\r\n  // parse normally\r\n  form.parse(req, function (err, fields, files) {\r\n\r\n    // use files and fields as you do today\r\n    var file = files.upload;\r\n\r\n    file.name // the uploaded file name\r\n    file.type // file type per [mime](https://github.com/bentomas/node-mime)\r\n    file.size // uploaded file size (file length in GridFS) named \"size\" for compatibility\r\n    file.path // same as file.name. included for compatibility\r\n    file.lastModified // included for compatibility\r\n\r\n    // files contain additional gridfs info\r\n    file.root // the root of the files collection used in MongoDB ('fs' here means the full collection in mongo is named 'fs.files')\r\n    file.id   // the ObjectId for this file\r\n\r\n  });\r\n});\r\n```\r\n\r\n## install\r\n\r\n```\r\nnpm install gridform\r\n```\r\n\r\n## exports\r\n\r\nThe module exports a single function which takes an options object.\r\n\r\n```js\r\nvar gridform = require('gridform');\r\nvar options = { db: db, mongo: mongo, filename: fn };\r\nvar form = gridform(options);\r\n```\r\n\r\nAvailable options:\r\n\r\n  - db: an open [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) db instance\r\n  - mongo: the [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver you are using\r\n  - filename: function\r\n\r\nThe optional `filename` function is passed the `file.name` before streaming to MongoDB providing an opportunity to return a customized filename with a prefix etc.\r\n\r\n`db` and `mongo` are required unless you've specified them on `gridform` itself.\r\n\r\n```js\r\nvar gridform = require('gridform');\r\ngridform.db = db;\r\ngridform.mongo = mongo;\r\nvar form = gridform(); // all good\r\n```\r\n\r\nThe gridform function returns an instance of `formidable.IncomingForm` so you can process uploads without changing any code.\r\n\r\n## tests\r\n\r\nRun the tests with `make test`.\r\n\r\n[LICENCE](https://github.com/aheckmann/gridform/blob/master/LICENSE)\r\n\r\n","tagline":"Stream formidable uploads into MongoDB GridFS","google":"UA-31745730-1","note":"Don't delete this file! It's used internally to help with page regeneration."}